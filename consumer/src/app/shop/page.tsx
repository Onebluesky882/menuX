"use client";
import { useState } from "react";
import useCart, { Menu } from "../../hooks/useCart";

type CategoriesProps = {
  categories: Category[];
  onClick: (id: number) => void;
};
type MenuProps = {
  menus: Menu[];
  onClick: (id: number) => void;
};

type Category = {
  id: number;
  name: string;
};

type CartItem = Menu & { amount: number };

const page = () => {
  // mock category ‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ô‡∏π
  const categories = [
    { id: 1, name: "üçö ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß" },
    { id: 2, name: "üç≤ ‡∏ï‡πâ‡∏°/‡πÅ‡∏Å‡∏á" },
    { id: 3, name: "ü•§ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°" },
    { id: 4, name: "üç∞ ‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô" },
  ];
  const menuItems = [
    // üçö ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    { id: 1, name: "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡πÑ‡∏Å‡πà‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß", price: 55, categoryId: 1 },
    { id: 2, name: "‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà", price: 50, categoryId: 1 },
    { id: 3, name: "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á", price: 60, categoryId: 1 },
    { id: 4, name: "‡∏£‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤", price: 65, categoryId: 1 },
    { id: 5, name: "‡∏ú‡∏±‡∏î‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß‡∏´‡∏°‡∏π", price: 55, categoryId: 1 },

    // üç≤ ‡∏ï‡πâ‡∏°/‡πÅ‡∏Å‡∏á
    { id: 6, name: "‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡πÑ‡∏Å‡πà", price: 70, categoryId: 2 },
    { id: 7, name: "‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á", price: 85, categoryId: 2 },
    { id: 8, name: "‡πÅ‡∏Å‡∏á‡∏™‡πâ‡∏°‡∏ä‡∏∞‡∏≠‡∏°‡∏Å‡∏∏‡πâ‡∏á", price: 80, categoryId: 2 },
    { id: 9, name: "‡∏ï‡πâ‡∏°‡∏à‡∏∑‡∏î‡πÄ‡∏ï‡πâ‡∏≤‡∏´‡∏π‡πâ‡∏´‡∏°‡∏π‡∏™‡∏±‡∏ö", price: 65, categoryId: 2 },

    // ü•§ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°
    { id: 10, name: "‡∏ä‡∏≤‡πÄ‡∏¢‡πá‡∏ô", price: 25, categoryId: 3 },
    { id: 11, name: "‡∏Å‡∏≤‡πÅ‡∏ü‡πÄ‡∏¢‡πá‡∏ô", price: 30, categoryId: 3 },
    { id: 12, name: "‡∏ô‡πâ‡∏≥‡∏≠‡∏±‡∏î‡∏•‡∏°", price: 20, categoryId: 3 },
    { id: 13, name: "‡∏ô‡πâ‡∏≥‡πÄ‡∏õ‡∏•‡πà‡∏≤", price: 10, categoryId: 3 },
    { id: 14, name: "‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß‡πÇ‡∏ã‡∏î‡∏≤", price: 35, categoryId: 3 },

    // üç∞ ‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô
    { id: 15, name: "‡∏ö‡∏±‡∏ß‡∏•‡∏≠‡∏¢‡πÑ‡∏Ç‡πà‡∏´‡∏ß‡∏≤‡∏ô", price: 35, categoryId: 4 },
    { id: 16, name: "‡∏•‡∏≠‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏Å‡∏∞‡∏ó‡∏¥", price: 30, categoryId: 4 },
    { id: 17, name: "‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á", price: 65, categoryId: 4 },
    { id: 18, name: "‡πÑ‡∏≠‡∏®‡∏Å‡∏£‡∏µ‡∏°‡∏Å‡∏∞‡∏ó‡∏¥", price: 25, categoryId: 4 },
  ];
  const [selectCat, setSelectCat] = useState<number>(1);
  const [cart, setCart] = useState<CartItem[]>([]);

  const { addCart } = useCart();
  // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° category ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const groupedCat = menuItems.filter(item => item.categoryId === selectCat);

  const handlePickMenu = (id: number) => {
    // safety check if not found id with menu
    const menu = groupedCat.find(item => item.id === id);
    if (!menu) return;
    setCart(prev => addCart(prev, menu));
  };

  console.log("selectMenu", cart);

  return (
    <div className="min-h-screen w-full bg-gray-50 p-6">
      {/* Header ‡∏£‡πâ‡∏≤‡∏ô */}
      <ShopSections />

      <div className="grid grid-cols-8 gap-4">
        {/*  Sidebar Category */}
        <Categories categories={categories} onClick={id => setSelectCat(id)} />
        {/* Section Menu */}
        <MenuCard menus={groupedCat as []} onClick={handlePickMenu} />
      </div>
      <div>
        <CartCard cart={cart} />
      </div>
    </div>
  );
};
export default page;

const Categories = ({ categories, onClick }: CategoriesProps) => {
  return (
    <div className="col-span-2 bg-white rounded-xl shadow p-4 space-y-2">
      <h2 className="text-lg font-semibold mb-3">‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</h2>
      {categories.map(cat => (
        <button
          onClick={() => onClick(cat.id!)}
          key={cat.id}
          className="w-full text-left px-3 py-2 rounded-lg hover:bg-green-100 transition"
        >
          {cat.name}
        </button>
      ))}
    </div>
  );
};

const MenuCard = ({ menus, onClick }: MenuProps) => {
  return (
    <div className="col-span-6 bg-white rounded-xl shadow p-4">
      <h2 className="text-lg font-semibold mb-3">‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£</h2>
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        {menus.map((item: any) => (
          <div
            key={item.id}
            onClick={() => onClick(item.id)}
            className="border rounded-lg p-4 hover:shadow-md transition cursor-pointer"
          >
            <h3 className="font-semibold text-gray-800">{item.name}</h3>
            <p className="text-sm text-gray-500">{item.price} ‡∏ö‡∏≤‡∏ó</p>
          </div>
        ))}
      </div>
    </div>
  );
};

const ShopSections = () => {
  return (
    <div className="bg-white border rounded-xl shadow-md p-6 mb-6">
      <h1 className="text-2xl font-bold text-gray-800 text-center">
        üè™ {`shop name`}
      </h1>
      <p className="text-sm text-gray-500 text-center mt-1">
        ‡∏≠‡∏£‡πà‡∏≠‡∏¢ ‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
      </p>
    </div>
  );
};

const CartCard = ({ cart }: { cart: CartItem[] }) => {
  const total = cart.reduce((sum, item) => sum + item.amount, 0);
  return <div>item :{total}</div>;
};
